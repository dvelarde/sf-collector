#
# Copyright (C) 2022 IBM Corporation.
#
# Authors:
# Frederico Araujo <frederico.araujo@ibm.com>
# Teryl Taylor <terylt@ibm.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#ARG ALPINE_VER=3.12.0
ARG UBUNTU_VER=22.04

#-----------------------
# Stage: base
#-----------------------
#FROM docker.io/ppc64le/alpine:${ALPINE_VER} AS base
#FROM docker.io/ppc64le/alpine:3.12.0 AS base
FROM ubuntu:22.04 AS base

# LABEL about custom image

# Disable Prompt During Packages Installation
ARG DEBIAN_FRONTEND=noninteractive

# DEBBIE update live data and create the cache
#RUN apt-get update

# install dependencies
RUN apt-get update && apt-get install -y \
    g++ \
    gcc \
    cmake \
    make \
    git \
    bash \
    perl \
    linux-generic \
    autoconf \
    automake \
    m4 \
    patch \
    libtool \
    libelf-dev \
    binutils \
    libboost-dev \
    libboost-all-dev \
    flex \
    bison \
    gawk \
    protobuf-compiler \
    openssl \
    libsparsehash-dev \
    clang \
    llvm
  
#RUN apt-get install -y libgrpc-dev

# DEBBIE packages that failed to install
#    elfutils-dev \
#    sparsehash but replaced with libsparsehash-dev
#    libelf-static \  // replaced with libelf-dev
#    boost-dev \     // replaced with libboost-dev
#    boost-static \   // replaced with libboost-all-dev
#    protobuf \      // replace with protobuf-compiler
#    c-ares \    // maybe no longer needed since not building grpc
#    c-ares-dev \    // maybe no longer needed since not building grpc
#    openssl-devel \  // i added this so not sure if still needed since not building grpc

#-----------------------
# Stage: mods
#-----------------------
FROM base AS mods

# environment and args
ARG INSTALL_PATH=/usr/local/sysflow

ENV PATH="$PATH:"${INSTALL_PATH}"/modules/bin"

ENV HOST_ROOT=/host

ENV HOME=/root

#ARG MAKE_JOBS=1
ARG MAKE_JOBS=4


#  build modules
RUN echo "1"
COPY ./modules /build/modules
COPY ./makefile.* /build/
COPY ./docker-entry-ubi.sh /usr/local/sysflow/modules/bin/
RUN  cmake --version
RUN  cd /build/modules && \
     make INSTALL_PATH=${INSTALL_PATH} MUSL=1 MAKE_JOBS=${MAKE_JOBS} install/no-elfutils #&& \
     #make clean && rm -rf /build/modules

